syntax = "proto3";

import "google/api/annotations.proto";
// import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "core.proto";
import "payload.proto";

package swing.v1;
option go_package = "./pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    security_definitions: {
        security: {
                key: "bearer"
                value: {
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, prefixed by Bearer: Bearer <token>"
            }
        }
    }
    security: {
        security_requirement: {
            key: "bearer"
        }
    }
};

service ApiService {

    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {
        option (google.api.http) = {
            get: "/",
            additional_bindings: [
				{
					get: "/health"
				}
			]
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security: {}
            summary: "Health Check"
            description: "This API for check health server"
        };
    };

}
