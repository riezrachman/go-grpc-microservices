syntax = "proto3";

// import "google/protobuf/any.proto";
// import "google/api/field_behavior.proto";
// import "google/protobuf/struct.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// import "mwitkow/go-proto-validators/validator.proto";

import "core.proto";
import "gorm_db.proto";

package swing.v1;
option go_package = "./pb";

message StoreListRequest {

  int32 limit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
  string filter = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Create 'AND' queries \n Format: [key:value,key:value] \n Example: filter=name:Toko,store_id:1 => WHERE store_id = 1 AND name = 'Toko' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
  }];
  string query = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Create 'OR' queries \n Format: [key1,key2,key3:value] \n Example: query=name,description:Toko => WHERE name = 'Toko' OR type = 'Toko' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
  }];

  string sort = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Order data by column name",
  }];
  Direction dir = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Order direction",
  }];

}

message StoreListResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  repeated Store data = 4;
  PaginationResponse pagination = 5;

}

message StoreDetailRequest {

  int32 id = 1;

}

message StoreDetailResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Store data = 4;

}

message StoreCreateRequest {

  int32 id = 1;
  Store data = 2;

}

message StoreCreateResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Store data = 4;

}


message StoreDeleteRequest {

  int32 id = 1;

}

message StoreDeleteResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Store data = 4;

}

message ProductListRequest {

  int32 limit = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Limit data per page. Default value '-1' for disable limit",
	}];
    int32 page = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Page number to get data. Default value '-1' for disable page",
	}];
  string filter = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Create 'AND' queries \n Format: [key:value,key:value] \n Example: filter=name:Toko,store_id:1 => WHERE store_id = 1 AND name = 'Toko' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key:>=value' => 'key >= value' \n - 'key:<=value' => 'key <= value' \n - 'key1:>=value1,key2:<=value2' => 'key1 >= value1 AND key2 <= value2' BETWEEN EXAMPLE \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
  }];
  string query = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Create 'OR' queries \n Format: [key1,key2,key3:value] \n Example: query=name,description:Toko => WHERE name = 'Toko' OR type = 'Toko' \n Expressions: \n - 'key:value' => 'key = value' \n - 'key:%%value' => 'key LIKE %value%' \n - 'key:%!value' => 'key ILIKE %value%' \n - 'key1.nestedKey1:value' => 'key1->>nestedKey1 = value'",
  }];

  string sort = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Order data by column name",
  }];
  Direction dir = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Order direction",
  }];

}

message ProductListResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  repeated Product data = 4;
  PaginationResponse pagination = 5;

}

message ProductDetailRequest {

  int32 id = 1;

}

message ProductDetailResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Product data = 4;

}

message ProductCreateRequest {

  int32 id = 1;
  Product data = 2;

}

message ProductCreateResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Product data = 4;

}


message ProductDeleteRequest {

  int32 id = 1;

}

message ProductDeleteResponse {

  bool error = 1;
  int32 code = 2;
  string message = 3;
  Product data = 4;

}
